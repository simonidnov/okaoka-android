var path=require("path"),_=require("lodash");module.exports=function(e){function t(){var t=e.file.readJSON("config.json");if(e.file.exists("config.local.json")){var s=e.file.readJSON("config.local.json");_.extend(t,s)}return t}function s(s){var i=e.config.get("buildConfig");return null==i&&(i=t(),e.config.set("buildConfig",i)),i[s]}function n(t){for(var s=[],i=0;i<t.length;i++){var n=t[i],a=e.file.readJSON(path.resolve(n.cwd,n.config)),r=a[n.source];r.forEach(function(e,t,s){s[t]=path.resolve(n.cwd,e)}),s=s.concat(r)}var o={},h=[];for(i=0;i<s.length;i++){var A=s[i],g=A.substr(A.lastIndexOf("src"+path.sep));null==o[g]&&(h.push(A),o[g]=!0)}return h}function a(){for(var e=s("source").concat(s("flashaudioplugin_source")).concat(s("cordovaaudioplugin_source")),t=[],i=0,n=e.length;n>i;i++){var a=path.basename(e[i],".js"),r=a.substr(0,1);r.toUpperCase()==r&&t.push(a)}return t}function r(){var t=e.file.read("BANNER");e.config("concat.options.banner",t)}e.initConfig({pkg:e.file.readJSON("package.json"),version:"NEXT",name:"soundjs",docsName:"<%= pkg.name %>_docs-<%= version %>",docsZip:"<%= docsName %>.zip",uglify:{options:{banner:e.file.read("LICENSE"),preserveComments:"some",compress:{global_defs:{DEBUG:!1}},mangle:{except:a()}},build:{files:{"output/<%= pkg.name.toLowerCase() %>-<%= version %>.min.js":s("source"),"output/flashaudioplugin-<%= version %>.min.js":s("flashaudioplugin_source"),"output/cordovaaudioplugin-<%= version %>.min.js":s("cordovaaudioplugin_source")}}},concat:{options:{separator:"",process:function(e,t){var s=e.replace(/^(\/\*\s)[\s\S]+?\*\//,"");return s=s.replace(/\/\/\s*namespace:/,""),s=s.replace(/\/\*\*[\s\S]+?@module[\s\S]+?\*\//,""),s=s.replace(/^\s*/,""),s=s.replace(/\s*$/,""),s="\n\n//##############################################################################\n// "+path.basename(t)+"\n//##############################################################################\n\n"+s}},build:{files:{"output/<%= pkg.name.toLowerCase() %>-<%= version %>.combined.js":n([{cwd:"",config:"config.json",source:"source"}]),"output/flashaudioplugin-<%= version %>.combined.js":n([{cwd:"",config:"config.json",source:"flashaudioplugin_source"}]),"output/cordovaaudioplugin-<%= version %>.combined.js":n([{cwd:"",config:"config.json",source:"cordovaaudioplugin_source"}])}}},yuidoc:{compile:{name:"<%= pkg.name %>",version:"<%= version %>",description:"<%= pkg.description %>",url:"<%= pkg.url %>",logo:"<%= pkg.logo %>",options:{paths:["./createjs","./soundjs"],outdir:"<%= docsFolder %>",linkNatives:!0,attributesEmit:!0,selleck:!0,helpers:["../build/path.js"],themedir:"../build/createjsTheme/"}}},compress:{build:{options:{mode:"zip",archive:"output/<%= docsZip %>"},files:[{expand:!0,src:"**",cwd:"<%= docsFolder %>"}]}},clean:{docs:{src:["<%= docsFolder %>/assets/scss"]}},copy:{docsZip:{files:[{expand:!0,cwd:"output/",src:"<%= docsZip %>",dest:"../docs/"}]},docsSite:{files:[{expand:!0,cwd:"<%= docsFolder %>",src:"**",dest:s("docs_out_path")}]},src:{files:[{expand:!0,cwd:"./output/",src:"*<%=version %>*.js",dest:"../lib/"}]}},updateversion:{sound:{file:"../src/soundjs/version.js",version:"<%= version %>"},flashaudioplugin:{file:"../src/soundjs/version_flashplugin.js",version:"<%= version %>"},cordovaaudioplugin:{file:"../src/soundjs/version_cordovaplugin.js",version:"<%= version %>"}},clearversion:{sound:{file:"../src/soundjs/version.js"},flashaudioplugin:{file:"../src/soundjs/version_flashplugin.js"},cordovaaudioplugin:{file:"../src/soundjs/version_cordovaplugin.js"}},mxmlc:{options:{rawConfig:"--source-path=../dev"},sound:{files:{"../src/soundjs/flashaudio/FlashAudioPlugin.swf":["../dev/com/createjs/soundjs/FlashAudioPlugin.as"]}}},sass:{docs:{options:{style:"compressed",sourcemap:"none"},files:{"createjsTheme/assets/css/main.css":"createjsTheme/assets/scss/main.scss"}}}}),e.loadNpmTasks("grunt-contrib-concat"),e.loadNpmTasks("grunt-contrib-uglify"),e.loadNpmTasks("grunt-contrib-yuidoc"),e.loadNpmTasks("grunt-contrib-compress"),e.loadNpmTasks("grunt-contrib-copy"),e.loadNpmTasks("grunt-mxmlc"),e.loadNpmTasks("grunt-contrib-sass"),e.loadNpmTasks("grunt-contrib-clean"),e.loadTasks("tasks/"),e.registerTask("exportScriptTags",function(){for(var s=e.option("path")||"",i=t(),n=i.source,a=[],r=0;r<n.length;r++){var o='<script src="<%=src %>"></script>',h=n[r].replace("../src/","");a.push(e.template.process(o,{data:{src:s+h}}))}console.log(a.join("\n"))}),e.registerTask("setDocsBase","Internal utility task to set a correct base for YUIDocs.",function(){e.file.setBase("../src"),e.config.set("docsFolder","../build/output/<%= docsName %>/")}),e.registerTask("resetBase","Internal utility task to reset the base, after setDocsBase",function(){e.file.setBase("../build"),e.config.set("docsFolder","./output/<%= docsName %>/")}),e.registerTask("docs",["sass","setDocsBase","yuidoc","resetBase","clean:docs","compress","copy:docsZip"]),e.registerTask("setVersion",function(){e.config.set("version",e.config.get("pkg").version)}),e.registerTask("next",function(){e.config("buildArgs",this.args||[]),r(),e.task.run(["coreBuild","clearBuildArgs"])}),e.registerTask("nextlib",["updateversion","combine","uglify","clearversion","copy:src"]),e.registerTask("_next_sound",["next"]),e.registerTask("build",function(){e.config("buildArgs",this.args||[]),r(),e.task.run(["setVersion","coreBuild","updatebower","copy:docsSite","clearBuildArgs"])}),e.registerTask("clearBuildArgs",function(){e.config("buildArgs",[])}),e.registerTask("coreBuild",["updateversion","combine","uglify","clearversion","docs","copy:src"]),e.registerTask("combine","Combine all source into a single, un-minified file.",["concat"]),e.registerTask("flash","Compile the FlashAudioPlugin.",["mxmlc"])};